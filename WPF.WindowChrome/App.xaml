<Application
    x:Class="MenuWindowChrome.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MenuWindowChrome"
    StartupUri="MainWindow.xaml">
    <!--  StartupUri="TIM.Login/View/LoginView.xaml">  -->
    <Application.Resources>
        <FontFamily x:Key="iconfont">pack://application:,,,/WPF.WindowChrome;component/Assets/Fonts/#iconfont</FontFamily>
        <FontFamily x:Key="fontawesome">pack://application:,,,/WPF.WindowChrome;component/Assets/Fonts/#fontawesome</FontFamily>

        <ImageSource x:Key="Img.leftpic">pack://application:,,,/WPF.WindowChrome;component/Assets/Images/left_pic.png</ImageSource>
        <ImageSource x:Key="Img.flower">pack://application:,,,/WPF.WindowChrome;component/Assets/Images/flower.png</ImageSource>
        <ImageSource x:Key="Img.qq">pack://application:,,,/WPF.WindowChrome;component/Assets/Images/qq.png</ImageSource>
        <ImageSource x:Key="Img.wx">pack://application:,,,/WPF.WindowChrome;component/Assets/Images/wx.png</ImageSource>
        <ImageSource x:Key="Img.qr_record">pack://application:,,,/WPF.WindowChrome;component/Assets/Images/qr_record.png</ImageSource>

        <!--  Minimize  M0,10 12,10  -->
        <PathGeometry x:Key="Minimize" Figures="M0,10 12,10" />
        <!--  Normalize    M0,1 L12,1 L12,10 L0,10 Z  -->
        <PathGeometry x:Key="Maximize" Figures="M0,1 L12,1 L12,10 L0,10 Z" />
        <!--  Normalize  M2,0 L11,0 L11,8 M0,4 L8,4 M0,3 L8,3 L8,10 L0,10 Z  -->
        <PathGeometry x:Key="Normalize" Figures="M2,0 L11,0 L11,8 M0,4 L8,4 M0,3 L8,3 L8,10 L0,10 Z" />
        <!--  Close     M6,6 L6,6 12,12 M12,6 12,6 6,12  -->
        <PathGeometry x:Key="Close" Figures="M6,6 L6,6 12,12 M12,6 12,6 6,12" />

        <Style x:Key="Style.Path.WinTitle" TargetType="{x:Type Path}">
            <!--<Setter Property="Width" Value="17" />
            <Setter Property="Height" Value="15" />-->
            <Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
            <Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
            <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
            <Setter Property="VerticalAlignment" Value="{Binding VerticalAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
            <Setter Property="Stretch" Value="Fill" />
            <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="StrokeEndLineCap" Value="Round" />
            <Setter Property="StrokeStartLineCap" Value="Round" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Value="true">
                    <Setter Property="Stroke" Value="LightGray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="Style.Button.Icon" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Height" Value="15" />
            <Setter Property="Width" Value="17" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
        <Style x:Key="Style.Control.Account" TargetType="{x:Type Control}">
            <Setter Property="Padding" Value="6,0,0,0" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
        </Style>
        <Style
            x:Key="Style.TextBox.Account"
            BasedOn="{StaticResource Style.Control.Account}"
            TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />

            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />
                                <Button
                                    Grid.Column="1"
                                    Width="50"
                                    Height="15"
                                    Margin="0,0,0,14"
                                    Padding="15,0,0,0"
                                    Style="{DynamicResource Style.Button.Icon}">
                                    <Viewbox>
                                        <Path Data="M183.168 332.501333a42.666667 42.666667 0 0 1 57.621333-2.496l2.709334 2.496L512 600.96l268.501333-268.48a42.666667 42.666667 0 0 1 57.621334-2.496l2.709333 2.496a42.666667 42.666667 0 0 1 2.496 57.621333l-2.496 2.709334-298.666667 298.666666a42.666667 42.666667 0 0 1-57.621333 2.496l-2.709333-2.496-298.666667-298.666666a42.666667 42.666667 0 0 1 0-60.330667z" Fill="#cdcdcd" />
                                    </Viewbox>
                                </Button>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="Style.PwdBox.Pwd"
            BasedOn="{StaticResource Style.Control.Account}"
            TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />
                                <Button
                                    x:Name="PART_ButtonIcon"
                                    Grid.Column="1"
                                    Width="50"
                                    Height="20"
                                    Margin="0,0,0,14"
                                    Padding="19,0,0,0"
                                    Style="{DynamicResource Style.Button.Icon}">
                                    <Grid>
                                        <Ellipse
                                            Width="{Binding Height, ElementName=PART_ButtonIcon}"
                                            Height="{Binding Path=Width, RelativeSource={RelativeSource Mode=Self}}"
                                            Stroke="#cdcdcd" />

                                        <Viewbox
                                            Width="13"
                                            Margin="0,4,3,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            RenderTransformOrigin="0.5,0.5">
                                            <Viewbox.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-90" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Viewbox.RenderTransform>
                                            <Path Data="M488.727273 242.757818v469.248l-170.565818-184.762182a34.909091 34.909091 0 1 0-51.293091 47.36l231.121454 250.414546a34.955636 34.955636 0 0 0 51.293091 0l231.121455-250.414546a34.862545 34.862545 0 0 0-1.954909-49.338181 34.909091 34.909091 0 0 0-49.338182 1.978181L558.545455 712.029091V242.734545a34.909091 34.909091 0 1 0-69.818182 0" Fill="Gray" />
                                        </Viewbox>

                                    </Grid>
                                </Button>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>


    </Application.Resources>
</Application>

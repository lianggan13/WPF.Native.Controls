<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="GTSStyleGridColumn" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="130" />
    </Style>
    <Style x:Key="GTSStyleDataGridRow" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="#212121" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GTSStyleThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GTSStyleDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid HorizontalAlignment="Stretch" Background="#F1F1F1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="1" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            x:Name="columnHeaderText"
                            Grid.Column="0"
                            Margin="0,0,0,0"
                            Padding="5,0,5,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center" />
                        <Thumb
                            Grid.Column="1"
                            Width="1"
                            HorizontalAlignment="Right"
                            Background="#DEDEDE"
                            Style="{StaticResource GTSStyleThumb}" />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="GTSStyleDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid Background="Transparent">
                        <Label
                            Margin="0"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Background="{TemplateBinding Background}"
                            Content="{TemplateBinding Content}"
                            FontSize="12"
                            Opacity="0.85" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="#212121" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GTSStyleDataGridCellTextBox" TargetType="{x:Type DataGridCell}">
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Margin" Value="0,1,0,0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="#212121" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GTSStyleDataGrid" TargetType="DataGrid">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="True" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="#DEDEDE" />
        <Setter Property="VerticalGridLinesBrush" Value="#DEDEDE" />
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="BorderBrush" Value="#DEDEDE" />
        <Setter Property="RowStyle" Value="{StaticResource GTSStyleDataGridRow}" />
        <Setter Property="CellStyle" Value="{StaticResource GTSStyleDataGridCell}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource GTSStyleDataGridColumnHeader}" />
    </Style>

    <Style
        x:Key="GTSStyleDataGridTextBox"
        BasedOn="{StaticResource GTSStyleDataGrid}"
        TargetType="DataGrid">
        <Setter Property="CellStyle" Value="{StaticResource GTSStyleDataGridCellTextBox}" />
    </Style>



    <Style x:Key="GTSStyleDataGridFreq" TargetType="DataGrid">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="True" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="#DEDEDE" />
        <Setter Property="VerticalGridLinesBrush" Value="#DEDEDE" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="BorderBrush" Value="#DEDEDE" />
        <Setter Property="RowStyle" Value="{StaticResource GTSStyleDataGridRow}" />
        <Setter Property="CellStyle" Value="{StaticResource GTSStyleDataGridCell}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource GTSStyleDataGridColumnHeader}" />
    </Style>


    <Style x:Key="GTSStyleDataGridCellIsEnabled" TargetType="Control">
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#E7EBF9" />
                <!--  #E7EBF9  -->
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="GTSStyleDataGridCellComboBox"
        BasedOn="{StaticResource GTSStyleDataGridCellIsEnabled}"
        TargetType="ComboBox">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#333333" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="White" />
        <!--<Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <TextBlock
                            Margin="10,0,25,0"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Text}"
                            TextTrimming="CharacterEllipsis" />
                        <ToggleButton Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <!--<Border Name="Border" Grid.ColumnSpan="2" Background="Transparent"  BorderThickness="1" BorderBrush="#DEDEDE"/>-->
                                        <Border
                                            Name="Border"
                                            Grid.ColumnSpan="2"
                                            Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}, FallbackValue='Transparent'}"
                                            BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}"
                                            BorderThickness="1">
                                            <TextBlock
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"
                                                Text="{Binding SelectedValue, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}"
                                                TextAlignment="Center" />
                                        </Border>
                                        <Path
                                            Name="Arrow"
                                            Grid.Column="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M 0 0 L 4 4 L 8 0 Z"
                                            Fill="#000000" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 -4 L 8 0 Z" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Popup
                            Name="Popup"
                            AllowsTransparency="true"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Background="Transparent" />
                                <ScrollViewer
                                    VerticalAlignment="Center"
                                    FontSize="12"
                                    Foreground="#000000"
                                    SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--  ComBoxItem  -->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Height" Value="30" />
                    <Setter Property="MinWidth" Value="60" />
                    <Setter Property="Background" Value="#fafafa" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border
                                    Name="Back"
                                    Background="#fafafa"
                                    BorderBrush="#dbdbdb"
                                    BorderThickness="0,0,0,0">
                                    <ContentPresenter
                                        Margin="9,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        ContentSource="{Binding Source}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="#eeeeee" />
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="#eeeeee" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

<UserControl
    x:Class="WPF.Animation.View.XamlClock"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WPF.Animation.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UniformGrid>
        <Grid>
            <Grid.Resources>
                <!--  Every drawn object is a Path, so this style affects all of them.  -->
                <Style TargetType="{x:Type Path}">
                    <Setter Property="Stroke" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                    <Setter Property="StrokeThickness" Value="2" />
                    <Setter Property="StrokeStartLineCap" Value="Round" />
                    <Setter Property="StrokeEndLineCap" Value="Round" />
                    <Setter Property="StrokeLineJoin" Value="Round" />
                    <Setter Property="StrokeDashCap" Value="Round" />
                </Style>
            </Grid.Resources>

            <Viewbox>
                <!--  Draw clock on canvas with center at (0, 0)  -->
                <Canvas Width="200" Height="200">
                    <Canvas.RenderTransform>
                        <TranslateTransform X="100" Y="100" />
                    </Canvas.RenderTransform>

                    <!--  Tick marks (small and large).  -->
                    <Path
                        Data="M 0 -90 A 90 90 0 1 1 -0.01 -90"
                        StrokeDashArray="0 3.14159"
                        StrokeThickness="3" />

                    <Path
                        Data="M 0 -90 A 90 90 0 1 1 -0.01 -90"
                        StrokeDashArray="0 7.854"
                        StrokeThickness="6" />

                    <!--  Hour hand pointing up.  -->
                    <Path Data="M 0 15 L 10 0, 0 -60, -10 0 Z" Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                        <Path.RenderTransform>
                            <RotateTransform x:Name="xformHour" />
                        </Path.RenderTransform>
                    </Path>

                    <!--  Minute hand pointing up.  -->
                    <Path Data="M 0 20 L 5 0 0 -80 -5 0 Z" Fill="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                        <Path.RenderTransform>
                            <RotateTransform x:Name="xformMinute" />
                        </Path.RenderTransform>
                    </Path>

                    <!--  Second hand pointing up.  -->
                    <Path Data="M 0 10 L 0 -80">
                        <Path.RenderTransform>
                            <RotateTransform x:Name="xformSecond" />
                        </Path.RenderTransform>
                    </Path>
                </Canvas>
            </Viewbox>

            <!--  All animations.  -->
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Canvas.Loaded">
                    <BeginStoryboard>
                        <Storyboard Name="storyboard" BeginTime="{Binding ., Source={x:Static local:XamlClock.BeginTime}}">
                            <DoubleAnimation
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="xformHour"
                                Storyboard.TargetProperty="Angle"
                                From="0"
                                To="360"
                                Duration="12:0:0" />

                            <DoubleAnimation
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="xformMinute"
                                Storyboard.TargetProperty="Angle"
                                From="0"
                                To="360"
                                Duration="1:0:0" />

                            <DoubleAnimation
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="xformSecond"
                                Storyboard.TargetProperty="Angle"
                                From="0"
                                To="360"
                                Duration="0:1:0" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>

        <Grid>
            <Grid.Resources>
                <!--
                    Get the current DateTime just once and stash it in
                    a Tag property of an arbitrary FrameworkElement.
                -->
                <FrameworkElement x:Key="dt" Tag="{x:Static s:DateTime.Now}" />

                <!--
                    Multiply Hour by 30 degrees and Minute by 0.5 degrees
                    and add. Result is stored in angleHour.Value.OffsetX.
                -->
                <TransformGroup x:Key="angleHour">
                    <TranslateTransform X="{Binding Source={StaticResource dt}, Path=Tag.Hour}" Y="{Binding Source={StaticResource dt}, Path=Tag.Minute}" />
                    <MatrixTransform Matrix="30 0 0.5 1 0 0" />
                </TransformGroup>

                <!--
                    Multiply Minute by 6 degrees and Second by 0.1 degrees
                    and add. Result is stored in angleMinute.Value.OffsetX.
                -->
                <TransformGroup x:Key="angleMinute">
                    <TranslateTransform X="{Binding Source={StaticResource dt}, Path=Tag.Minute}" Y="{Binding Source={StaticResource dt}, Path=Tag.Second}" />
                    <MatrixTransform Matrix="6 0 0.1 1 0 0" />
                </TransformGroup>

                <!--  Multiply Second by 6 degrees. Result is angleSecond.Value.M11.  -->
                <TransformGroup x:Key="angleSecond">
                    <ScaleTransform ScaleX="{Binding Source={StaticResource dt}, Path=Tag.Second}" />
                    <ScaleTransform ScaleX="6" />
                </TransformGroup>

                <!--  Every drawn object is a Path, so this style affects all of them.  -->
                <Style TargetType="{x:Type Path}">
                    <Setter Property="Stroke" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                    <Setter Property="StrokeThickness" Value="2" />
                    <Setter Property="StrokeStartLineCap" Value="Round" />
                    <Setter Property="StrokeEndLineCap" Value="Round" />
                    <Setter Property="StrokeLineJoin" Value="Round" />
                    <Setter Property="StrokeDashCap" Value="Round" />
                </Style>
            </Grid.Resources>

            <Viewbox>
                <!--  Draw clock on canvas with center at (0, 0)  -->
                <Canvas Width="200" Height="200">
                    <Canvas.RenderTransform>
                        <TranslateTransform X="100" Y="100" />
                    </Canvas.RenderTransform>

                    <!--  Tick marks (small and large).  -->
                    <Path
                        Data="M 0 -90 A 90 90 0 1 1 -0.01 -90"
                        StrokeDashArray="0 3.14159"
                        StrokeThickness="3" />

                    <Path
                        Data="M 0 -90 A 90 90 0 1 1 -0.01 -90"
                        StrokeDashArray="0 7.854"
                        StrokeThickness="6" />

                    <!--  Hour hand pointing up.  -->
                    <Path Data="M 0 -60 C 0 -30, 20 -30, 5 -20 L 5 0                                  C 5 7.5, -5 7.5, -5 0 L -5 -20                                  C -20 -30, 0 -30 0 -60" Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                        <Path.RenderTransform>
                            <RotateTransform x:Name="xformHour2" Angle="{Binding Source={StaticResource angleHour}, Path=Value.OffsetX}" />
                        </Path.RenderTransform>
                    </Path>

                    <!--  Minute hand pointing up.  -->
                    <Path Data="M 0 -80 C 0 -75, 0 -70, 2.5 -60 L 2.5 0                                 C 2.5 5, -2.5 5, -2.5 0 L -2.5 -60                                 C 0 -70, 0 -75, 0 -80" Fill="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                        <Path.RenderTransform>
                            <RotateTransform x:Name="xformMinute2" Angle="{Binding Source={StaticResource angleMinute}, Path=Value.OffsetX}" />
                        </Path.RenderTransform>
                    </Path>

                    <!--  Second hand pointing up.  -->
                    <Path Data="M 0 10 L 0 -80">
                        <Path.RenderTransform>
                            <RotateTransform x:Name="xformSecond2" Angle="{Binding Source={StaticResource angleSecond}, Path=Value.M11}" />
                        </Path.RenderTransform>
                    </Path>
                </Canvas>
            </Viewbox>

            <!--  All animations.  -->
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Canvas.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                IsAdditive="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="xformHour2"
                                Storyboard.TargetProperty="Angle"
                                From="0"
                                To="360"
                                Duration="12:0:0" />

                            <DoubleAnimation
                                IsAdditive="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="xformMinute2"
                                Storyboard.TargetProperty="Angle"
                                From="0"
                                To="360"
                                Duration="1:0:0" />

                            <DoubleAnimation
                                IsAdditive="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="xformSecond2"
                                Storyboard.TargetProperty="Angle"
                                From="0"
                                To="360"
                                Duration="0:1:0" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>

    </UniformGrid>
</UserControl>

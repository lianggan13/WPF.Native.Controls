<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
    <Style x:Key="Style.RadioButton.MainView.Navigation" TargetType="{x:Type RadioButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderBrush" Value="#999999" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Background" Value="#FAFAFA" />
        <Setter Property="BorderBrush" Value="#999999" />
        <Setter Property="Foreground" Value="#666666" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        x:Name="radioButtonBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentControl
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.MouseOver.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}" />-->
                            <!--<Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.MouseOver.Glyph}" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Disabled.Border}" />-->
                            <!--<Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Disabled.Glyph}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Pressed.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Pressed.Border}" />-->
                            <!--<Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Pressed.Glyph}" />-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="#2260B0" />
                            <Setter TargetName="contentPresenter" Property="Foreground" Value="#FFFFFF" />
                            <!--<Setter  Property="Height" Value="28" />-->
                            <!--<Setter TargetName="optionMark" Property="Opacity" Value="1" />-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <!--<Setter TargetName="optionMark" Property="Opacity" Value="0.56" />-->
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="#3F7DCD" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="#13509F" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="#EEEEEE" />

                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="#E1E1E1" />
                        </MultiTrigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

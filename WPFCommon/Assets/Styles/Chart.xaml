<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/charts/themekeys">
    <Style x:Key="Style.DXChart.Title" TargetType="{x:Type dxc:Title}">
        <Setter Property="Margin" Value="36,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Dock" Value="Top" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Visibility" Value="Visible" />
    </Style>



    <!--#region CrosshairOptions-->
    <dxc:CrosshairOptions
        x:Key="Style.DXChart.CrosshairOptions"
        ContentShowMode="Label"
        CrosshairLabelMode="ShowCommonForAllSeries"
        GroupHeaderPattern="{}{A}°"
        LinesMode="Auto"
        ShowArgumentLabels="False"
        ShowArgumentLine="True"
        ShowCrosshairLabels="True"
        ShowGroupHeaders="True"
        ShowValueLabels="False"
        ShowValueLine="False">
        <dxc:CrosshairOptions.PopupTemplate>
            <DataTemplate>
                <Border
                    Margin="20,0,0,0"
                    Padding="4"
                    Background="White"
                    BorderBrush="#C0C0C0C0"
                    BorderThickness="1">
                    <ScrollViewer>
                        <StackPanel>
                            <ItemsControl Width="100" ItemsSource="{Binding PresentationData}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ContentPresenter
                                            MinWidth="50"
                                            Content="{Binding}"
                                            ContentTemplate="{Binding Path=CrosshairSeriesLabelTemplate}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </StackPanel>

                    </ScrollViewer>
                </Border>
            </DataTemplate>
        </dxc:CrosshairOptions.PopupTemplate>
    </dxc:CrosshairOptions>
    <!--#endregion-->

    <!--#region Legend-->
    <dxc:Legend
        x:Key="Style.DXChart.Legend"
        HorizontalContentAlignment="Stretch"
        Background="White"
        HorizontalPosition="RightOutside"
        Orientation="Vertical"
        ReverseItems="False"
        VerticalPosition="Top"
        Visibility="Collapsed">
        <dxc:Legend.ItemTemplate>
            <DataTemplate>
                <dxc:LegendItemContainer Margin="0,0,0,0" HorizontalAlignment="Stretch">
                    <ToggleButton
                        x:Name="togBtn"
                        Margin="0,8,0,0"
                        Padding="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BorderThickness="0"
                        Cursor="Hand"
                        IsChecked="{Binding ChartElement.CheckedInLegend, Mode=TwoWay}"
                        IsEnabled="{Binding IsEnabled}">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ControlTemplate>
                        </ToggleButton.Template>
                        <Grid x:Name="gd">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid Width="10" Height="{DXBinding @s.Width}">
                                <Line
                                    x:Name="ellipse"
                                    Stretch="Uniform"
                                    Stroke="{Binding MarkerLineBrush}"
                                    StrokeDashArray="{Binding MarkerLineStyle.DashStyle.Dashes}"
                                    StrokeThickness="1"
                                    X1="0"
                                    X2="1" />
                            </Grid>
                            <TextBlock
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                Padding="0,0,0,0"
                                Text="{Binding Text}" />
                        </Grid>
                    </ToggleButton>
                </dxc:LegendItemContainer>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding ChartElement.CheckedInLegend, Mode=TwoWay}" Value="true">
                        <Setter TargetName="gd" Property="Background" Value="#DCDCDC" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </dxc:Legend.ItemTemplate>
    </dxc:Legend>
    <!--#endregion-->

    <!--#region ToolTipOptions-->
    <dxc:ToolTipOptions
        x:Key="Style.DXChart.ToolTipOptions"
        ShowForPoints="True"
        ShowForSeries="False"
        ShowHint="False">
        <dxc:ToolTipOptions.ToolTipPosition>
            <dxc:ToolTipMousePosition Location="TopLeft" />
        </dxc:ToolTipOptions.ToolTipPosition>
    </dxc:ToolTipOptions>
    <!--#endregion-->

    <!--#region ChartToolTipController-->
    <dxc:ChartToolTipController
        x:Key="Style.DXChart.ChartToolTipController"
        AutoPopDelay="0"
        CloseOnClick="False"
        ContentMargin="1"
        InitialDelay="0:0:0.1"
        OpenMode="OnHover"
        ShowBeak="False"
        ShowShadow="False" />
    <!--#endregion-->

    <!--#region Palette-->
    <dxc:CustomPalette x:Key="Style.DXChart.CustomPalette">
        <dxc:CustomPalette.Colors>
            <Color>#8aaf3e</Color>
            <Color>#7552a0</Color>
            <Color>#3b71b0</Color>
            <Color>#b03b38</Color>
            <Color>#cc349c</Color>
            <Color>#82FAB0</Color>
            <Color>#9FA4E3</Color>
            <Color>#FF1D1D</Color>
            <Color>#FF8593</Color>
            <Color>#E3BC9A</Color>
            <Color>#FAE37D</Color>
        </dxc:CustomPalette.Colors>
    </dxc:CustomPalette>

    <!--<x:Array x:Key="Style.DXChart.Series.Brushes">
        <Color>#8aaf3e</Color>
        <Color>#7552a0</Color>
        <Color>#3b71b0</Color>
        <Color>#b03b38</Color>
        <Color>#cc349c</Color>
        <Color>#82FAB0</Color>
        <Color>#9FA4E3</Color>
        <Color>#FF1D1D</Color>
        <Color>#FF8593</Color>
        <Color>#E3BC9A</Color>
        <Color>#FAE37D</Color>
    </x:Array>-->
    <!--#endregion-->



    <!--#region Axis-->
    <Style x:Key="Style.DXChart.AxisTitle" TargetType="{x:Type dxc:AxisTitle}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="#333333" />
    </Style>

    <Style x:Key="Style.DXChart.AxisLabel" TargetType="{x:Type dxc:AxisLabel}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="0" />
    </Style>


    <Style x:Key="Style.DXChart.AxisX" TargetType="{x:Type dxc:AxisX2D}">
        <Setter Property="Alignment" Value="Near" />
        <Setter Property="GridLinesVisible" Value="False" />
        <Setter Property="Interlaced" Value="False" />
        <Setter Property="TickmarksMinorVisible" Value="True" />
        <!--<Setter Property="Label">
            <Setter.Value>
                <dxc:AxisLabel   FontSize="12" />
            </Setter.Value>
        </Setter>-->
        <Setter Property="CrosshairAxisLabelOptions">
            <Setter.Value>
                <dxc:CrosshairAxisLabelOptions Pattern="{}{A:n1}°" Visibility="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="NumericScaleOptions">
            <Setter.Value>
                <dxc:ContinuousNumericScaleOptions AutoGrid="True" GridSpacing="5" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style.DXChart.AxisY" TargetType="{x:Type dxc:AxisY2D}">
        <Setter Property="GridLinesMinorVisible" Value="False" />
        <Setter Property="GridLinesVisible" Value="True" />
        <Setter Property="Interlaced" Value="False" />
        <Setter Property="TickmarksMinorVisible" Value="True" />
        <Setter Property="LabelVisibilityMode" Value="AutoGeneratedAndCustom" />

        <!--<Setter Property="Label">
            <Setter.Value>
                <dxc:AxisLabel FontSize="12" />
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="CrosshairAxisLabelOptions">
            <Setter.Value>
                <dxc:CrosshairAxisLabelOptions  Pattern="{}{A:n1}°" Visibility="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="NumericScaleOptions">
            <Setter.Value>
                <dxc:ContinuousNumericScaleOptions AutoGrid="True" GridSpacing="5" />
            </Setter.Value>
        </Setter>-->
    </Style>
    <!--#endregion-->

    <!--#region LineSeries2D-->
    <DataTemplate x:Key="Style.DXChart.LegendMarkerTemplate">
        <StackPanel Orientation="Horizontal">
            <!--<Grid Width="12" Height="12">-->
            <Grid Width="20" Height="12">
                <Line
                    x:Name="ellipse"
                    Stretch="Fill"
                    Stroke="{Binding Path=MarkerLineBrush}"
                    StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
                    StrokeThickness="2"
                    X1="0"
                    X2="1" />
            </Grid>
            <!--<TextBlock
                Width="55"
                Margin="4,0,0,0"
                VerticalAlignment="Center"
                Text="{Binding Path=Text}" />-->
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="Style.DXChart.CrosshairLabelTemplate">
        <StackPanel Orientation="Vertical">
            <TextBlock
                Margin="0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Background="Transparent"
                FontFamily="{Binding FontFamily}"
                FontSize="12"
                FontStretch="{Binding FontStretch}"
                FontStyle="{Binding FontStyle}"
                FontWeight="Bold"
                Foreground="{Binding Foreground}"
                Text="{Binding HeaderText}"
                Visibility="{Binding HeaderTextVisibility}" />
            <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                <!--
                    Width="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendMarkerWidth}}"
                    Height="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendMarkerHeight}}"
                -->
                <Grid
                    Margin="0,3,0,0"
                    VerticalAlignment="Top"
                    Visibility="{Binding MarkerVisibility}">
                    <Rectangle Fill="Transparent" Stretch="Uniform" />
                    <ContentPresenter Content="{Binding MarkerItem}" ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=Content.MarkerTemplate}" />
                </Grid>
                <TextBlock
                    Grid.Column="1"
                    Margin="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendItemTextMargin}}"
                    VerticalAlignment="Center"
                    FontFamily="{Binding FontFamily}"
                    FontSize="{Binding FontSize}"
                    FontStretch="{Binding FontStretch}"
                    FontStyle="{Binding FontStyle}"
                    FontWeight="{Binding FontWeight}"
                    Foreground="{Binding Foreground}"
                    Text="{Binding Text}"
                    Visibility="{Binding TextVisibility}" />
            </StackPanel>
            <TextBlock
                Margin="0,2"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontFamily="{Binding FontFamily}"
                FontSize="{Binding FontSize}"
                FontStretch="{Binding FontStretch}"
                FontStyle="{Binding FontStyle}"
                FontWeight="{Binding FontWeight}"
                Foreground="{Binding Foreground}"
                Text="{Binding FooterText}"
                Visibility="{Binding FooterTextVisibility}" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="Style.DXChart.LineSeries2D" TargetType="{x:Type dxc:LineSeries2D}">
        <!--<Setter Property="AllowResample" Value="True" />-->
        <Setter Property="ArgumentDataMember" Value="Arg" />
        <Setter Property="CrosshairContentShowMode" Value="Label" />
        <Setter Property="CrosshairLabelPattern" Value="{}{V}" />
        <Setter Property="LabelsVisibility" Value="False" />
        <Setter Property="MarkerSize" Value="7" />
        <Setter Property="MarkerVisible" Value="False" />
        <Setter Property="ShowInLegend" Value="True" />
        <Setter Property="ToolTipPointPattern" Value="{}{A}°,{V:0.00}" />
        <Setter Property="ValueDataMember" Value="Value" />
        <Setter Property="MarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource Style.DXChart.LegendMarkerTemplate}" />
        <Setter Property="CrosshairLabelTemplate" Value="{StaticResource Style.DXChart.CrosshairLabelTemplate}" />
        <!--#region [Keep back]-->
        <!--<Setter Property="SeriesAnimation">
            <Setter.Value>
                <dxc:Line2DBlowUpAnimation />
            </Setter.Value>
        </Setter>
        <Setter Property="PointAnimation">
            <Setter.Value>
                <dxc:Marker2DFadeInAnimation />
            </Setter.Value>
        </Setter>
        <Setter Property="Label">
            <Setter.Value>
                <dxc:SeriesLabel
                    dxc:MarkerSeries2D.Angle="45"
                    ConnectorVisible="False"
                    Indent="5"
                    ResolveOverlappingMode="Default" />
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipPointTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Label Content="{Binding ToolTipText}" FontSize="12" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
        <!--#endregion-->
    </Style>
    <!--#endregion-->

    <!--#region DXChart-->
    <Style x:Key="Style.DXChart" TargetType="{x:Type dxc:ChartControl}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CrosshairEnabled" Value="True" />
        <Setter Property="CrosshairOptions" Value="{StaticResource Style.DXChart.CrosshairOptions}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Legend" Value="{StaticResource Style.DXChart.Legend}" />
        <Setter Property="ToolTipController" Value="{StaticResource Style.DXChart.ChartToolTipController}" />
        <Setter Property="ToolTipEnabled" Value="False" />
        <Setter Property="ToolTipOptions" Value="{StaticResource Style.DXChart.ToolTipOptions}" />
    </Style>
    <!--#endregion-->

    <!--#region XYDiagram2D-->
    <Style x:Key="Style.DXChart.XYDiagram2D" TargetType="{x:Type dxc:XYDiagram2D}">
        <Setter Property="EnableAxisXNavigation" Value="True" />
        <Setter Property="EnableAxisYNavigation" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SeriesDataMember" Value="Legend" />
    </Style>
    <!--#endregion-->

    <Style x:Key="Style.DXChart.Legend.Border" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="#CCCCCC" />
        <Setter Property="BorderThickness" Value="1" />
        <!--<Setter Property="Visibility" Value="{DXBinding 'Legends.Count>0?`Visible`:`Collapsed`'}" />-->

    </Style>

    <DataTemplate x:Key="Style.DXChart.Legend.ItemTemplate">
        <Border
            x:Name="border"
            Margin="0,2,0,0"
            Cursor="Hand"
            MouseDown="{DXEvent Handler=@a($UserControl).DataContext.Legend_MouseDown(@s.DataContext)}">
            <Grid
                Height="24"
                Margin="6,0,0,0"
                HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid Width="20" Height="{DXBinding @s.Width}">
                    <Line
                        x:Name="ellipse"
                        Stretch="Fill"
                        Stroke="{Binding Series.Brush}"
                        StrokeDashArray="{Binding Series.LineStyle.DashStyle.Dashes}"
                        StrokeDashOffset="4"
                        StrokeThickness="2"
                        X1="0"
                        X2="1" />
                    <!--  StrokeThickness="{Binding Series.LineStyle.Thickness}"  -->
                </Grid>
                <TextBlock
                    x:Name="txt"
                    Grid.Column="1"
                    Margin="3,0,0,0"
                    VerticalAlignment="Center"
                    Foreground="#333333"
                    Text="{Binding Series.DisplayName}"
                    TextAlignment="Left" />
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter TargetName="border" Property="Background" Value="#DCDCDC" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=border}" Value="true" />
                    <Condition Binding="{Binding IsChecked}" Value="false" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="border" Property="Background" Value="#EAEAEA" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>







</ResourceDictionary>
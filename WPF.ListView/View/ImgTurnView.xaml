<Window
    x:Class="ListViewImgTurn.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ListViewImgTurn"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MainWindow"
    Width="800"
    Height="450"
    PreviewMouseWheel="Window_PreviewMouseWheel"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="14,0,0,0"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="radioButtonBorder"
                                Margin="1,1,2,1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="100">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse
                                        x:Name="optionMark"
                                        MinWidth="6"
                                        MinHeight="6"
                                        Fill="{StaticResource RadioButton.Static.Glyph}"
                                        Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.MouseOver.Background}" />
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Disabled.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Disabled.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Pressed.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="optionMark" Property="Opacity" Value="0.56" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <RadioButton Style="{DynamicResource RadioButtonStyle1}">TESTEST</RadioButton>


        <Viewbox Stretch="Fill" x:Name="vb" RenderTransformOrigin="0.5,0.5">
            <Viewbox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="st" ScaleX="0.5" ScaleY="0.5" />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Viewbox.RenderTransform>
            <ListView
                x:Name="lvImg"
                ItemsSource="{Binding ImageList}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                SelectedIndex="{Binding SelectedIndex, ElementName=lvOption}">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <!--  使用 Grid 作为容器,产生 叠加效果  -->
                        <Grid />

                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Opacity" Value="0" />
                        <Setter Property="IsHitTestVisible" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <!--  只有 ContentPresenter,让 ListViewItem 清纯干净点  -->
                                    <ContentPresenter IsHitTestVisible="{TemplateBinding IsHitTestVisible}" />

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Selector.IsSelected" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetProperty="Opacity"
                                                            From="0"
                                                            To="1"
                                                            Duration="0:0:0.5" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetProperty="Opacity"
                                                            From="1"
                                                            To="0"
                                                            Duration="0:0:0.5" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Image
                            Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                            Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                            Source="{Binding}"
                            Stretch="Fill" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Viewbox>

        <ListView
            x:Name="lvOption"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Background="Transparent"
            BorderThickness="0"
            ItemsSource="{Binding ImageList}"
            SelectedIndex="0">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="BorderBrush" Value="AliceBlue" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border
                                    x:Name="radioButtonBorder"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="100">
                                    <Grid x:Name="markGrid" Margin="2">
                                        <Ellipse
                                            x:Name="optionMark"
                                            MinWidth="6"
                                            MinHeight="6"
                                            Fill="#ccc"
                                            Opacity="0" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <Button
            Margin="5"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Click="Button_Click"
            Content="Auto"
            Cursor="Hand">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border BorderBrush="AliceBlue" BorderThickness="1">
                                    <TextBlock Foreground="White" Text="{TemplateBinding Content}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
